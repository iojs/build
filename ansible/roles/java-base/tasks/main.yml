---

#
# installs java
#

- name: add webupd8team oracle java repository
  when: os == "debian8"
  lineinfile:
    dest: /etc/apt/sources.list
    state: present
    line: deb http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main

- name: add webupd8team oracle java repository key
  when: os == "debian8"
  shell: apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EEA14886

- name: accept webupd8 oracle java 8 license
  when: os == "debian8"
  debconf: name='oracle-java8-installer' question='shared/accepted-oracle-license-v1-1' value='true' vtype='select'

# if this fails you want to check in vars/main.yml and add package name
# as appropriate -- try to use generic os family if available.

- name: Check if java is already installed
  changed_when: no
  check_mode: no
  raw: "{{ java_path[os] | default(\"java\") }} -version"
  register: java
  ignore_errors: yes

- name: install java
  when:
    - java_package_name is defined and java_package_name != ""
    - not os|startswith("zos")
    - not os|startswith("macos")
  notify:
    - package updated
    - restart Jenkins
  package:
    name: "{{ java_package_name }}"
    state: "{{ 'present' if os|match_key(pm) == 'pkgin' else 'latest' }}"
    # Package manager mapping in ansible/roles/package-upgrade/vars/main.yml.
    use: "{{ os|match_key(pm)|default(omit) }}"

- name: install java (macOS)
  become_user: "{{ ansible_user }}"
  when: java.rc > 0 and os|startswith("macos")
  homebrew_cask:
        name: "{{ java_package_name }}"
        state: present

# Uses the AdoptOpenJDK API https://github.com/adoptopenjdk/openjdk-api-v3
# to discover the most recent release for the given adoptopenjdk_version and
# platform.
- name: fetch adoptopenjdk metadata
  check_mode: no
  register: adoptopenjdk_metadata
  uri:
    return_content: yes
    status_code: 200
    url: "https://api.adoptopenjdk.net/v3/assets/feature_releases/{{ adoptopenjdk_version }}/ga?architecture={{ adoptopenjdk_arch }}&image_type=jre&jvm_impl=openj9&os={{ adoptopenjdk_os }}&project=jdk&heap_size=normal&page_size=1&sort_method=DEFAULT&sort_order=DESC&vendor=adoptopenjdk"
  when: use_adoptopenjdk == True

# If we're already using the latest there is no need to do anything.
- name: check existing adoptopenjdk version is up to date
  set_fact:
    update_adoptopenjdk: "{{ adoptopenjdk_metadata.json[0].version_data.openjdk_version not in java.stdout }}"
  when: use_adoptopenjdk == True

- name: create cache directory for adoptopenjdk binaries
  file:
    path: "/var/cache/adoptopenjdk-binaries"
    state: directory
  when: 
    - use_adoptopenjdk == True
    - update_adoptopenjdk == True

- name: download adoptopenjdk binary
  get_url:
    checksum: sha256:{{ adoptopenjdk_package.checksum }}
    dest: "/var/cache/adoptopenjdk-binaries/{{ adoptopenjdk_package.name }}"
    url: "{{ adoptopenjdk_package.link }}"
  register: adoptopenjdk_local
  when:
    - use_adoptopenjdk == True
    - update_adoptopenjdk == True
  vars:
    adoptopenjdk_package: "{{ adoptopenjdk_metadata.json[0].binaries[0].package }}"

- name: unpack adoptopenjdk binary
  register: adoptopenjdk_unpacked
  unarchive:
    dest: "/opt/"
    list_files: yes
    remote_src: yes
    src: "{{ adoptopenjdk_local.dest }}"
  when:
    - use_adoptopenjdk == True
    - update_adoptopenjdk == True

# Store the current state of the symlink before modifying.
- name: check existing adoptopenjdk symlink
  register: adoptopenjdk_symlink
  stat:
    path: "/usr/bin/java"
  when: 
    - use_adoptopenjdk == True
    - update_adoptopenjdk == True

- name: symlink adoptopenjdk
  file:
    src: "/opt/{{ adoptopenjdk_unpacked.files[0].split('/')[0] }}/bin/java"
    dest: "/usr/bin/java"
    state: link
  notify:
    - restart Jenkins
  when:
    - use_adoptopenjdk == True
    - update_adoptopenjdk == True

# If the symlink existed before we modified it, check if the old target matches
# the new target. If they do not match, remove the old JRE.
- name: remove old adoptopenjdk
  file:
    path: "{{ old_jdk_dir }}"
    state: absent
  vars:
    old_jdk_dir: "{{ adoptopenjdk_symlink.stat.lnk_source | dirname | dirname }}"
  when:
    - use_adoptopenjdk == True
    - update_adoptopenjdk == True
    - adoptopenjdk_symlink.stat.exists
    - adoptopenjdk_symlink.stat.lnk_source != "/opt/"+adoptopenjdk_unpacked.files[0].split('/')[0]+"/bin/java"
