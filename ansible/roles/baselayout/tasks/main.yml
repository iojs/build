---

#
# common tasks suitable for all machines
#

- name: gather facts
  setup:

# setting hostname is not supported for all os:es. see
# https://github.com/ansible/ansible-modules-core/issues/4818
# https://github.com/ansible/ansible-modules-core/issues/4782
# also, some os:es complain about underscores in hostnames
- name: generate hostname
  set_fact:
    safe_hostname: "{{ inventory_hostname | regex_replace('_', '--') }}"

- name: set hostname
  when: not os|startswith("smartos") and not os|startswith("zos")
        and not os|startswith("macos") and not os|startswith("aix") and not os|startswith("ibmi")
  hostname: name="{{ safe_hostname }}"

- name: Set hostname to inventory_hostname macOS
  command: "{{ item }}"
  with_items:
    - "sudo scutil --set HostName {{ inventory_hostname }}"
    - "sudo scutil --set ComputerName {{ inventory_hostname }}"
    - "dscacheutil -flushcache"
  when: os|startswith("macos")

- name: Set hostname to inventory_hostname AIX
  command: " hostname {{ inventory_hostname }}"
  when: os|startswith("aix")

- name: disable joyent smartconnect
  when: os|startswith("smartos")
  notify: restart sshd
  lineinfile: state=absent dest="{{ ssh_config }}" regexp=libsmartsshd.so

- name: change default coredump folder
  when: os|startswith("smartos")
  shell: coreadm -i /home/iojs/cores/core.%f.%p -e process -d global

- name: disable sftp
  when: not "'rhel7-s390x' in inventory_hostname"
  notify: restart sshd
  lineinfile: state=absent dest="{{ ssh_config }}" regexp=^Subsystem(\s+)sftp

- name: add os-specific repos
  include: "{{ repos_include }}"
  loop_control:
    loop_var: repos_include
  with_first_found:
    - files:
        - "{{ role_path }}/tasks/partials/repo/{{ os }}.yml"
        - "{{ role_path }}/tasks/partials/repo/{{ os|stripversion }}.yml"
      skip: true

- name: check for a recent enough git
  when: os in git_no_binpkg
  stat: path="{{ binary_dest }}"
  register: has_git

- name: centos6 | remove existing git package
  when: "os == 'centos6' and arch != 'arm64'"
  yum:
    name: "git"
    state: absent

- name: install packages
  when: not os|startswith("zos") and not os|startswith("macos")
  package: 
    name: "{{ package }}"
    state: present
    use: "{{ os|startswith(\"ibmi\")|ternary(\"yum\", omit) }}"
  loop_control:
    loop_var: package
  with_items:
    # ansible doesn't like empty lists
    - "{{ packages[os+'_'+arch]|default('[]') }}"
    - "{{ packages[os]|default('[]') }}"
    - "{{ packages[os|stripversion]|default('[]') }}"
    - "{{ common_packages|default('[]') }}"

# Currently does not work on the DTK for 11.0 - The unsupported warnings cause the task to fail
- name: install packages (macos)
  when: os|startswith("macos")
  become_user: administrator
  community.general.homebrew: name="{{ package }}" state=present
  loop_control:
    loop_var: package
  with_items:
    # ansible doesn't like empty lists
    - "{{ packages[os+'_'+arch]|default('[]') }}"
    - "{{ packages[os]|default('[]') }}"
    - "{{ packages[os|stripversion]|default('[]') }}"
    - "{{ common_packages|default('[]') }}"

- name: centos7_ppc64 | update package alternatives
  when: os == "centos7" and arch == "ppc64"
  alternatives:
    link: /usr/local/bin/{{ cmake }}
    name: "{{ cmake }}"
    path: /usr/bin/{{ cmake }}3
  loop_control:
    loop_var: cmake
  with_items:
    - cmake
    - cpack
    - ctest

- name: ubuntu1404 | update package alternatives
  when: os == "ubuntu1404"
  alternatives: link=/usr/bin/{{ gcc }} name={{ gcc }} path=/usr/bin/{{ gcc }}-4.9
  loop_control:
    loop_var: gcc
  with_items:
    - gcc
    - g++

- name: ubuntu1604 | update package alternatives
  when: os == "ubuntu1604"
  alternatives: link=/usr/bin/{{ gcc }} name={{ gcc }} path=/usr/bin/{{ gcc }}-5
  loop_control:
    loop_var: gcc
  with_items:
    - gcc
    - g++

- name: ubuntu1604 | update python package alternatives
  when: os == "ubuntu1604"
  alternatives:
    link: "/usr/bin/python3"
    name: python3
    path: "/usr/bin/python3.9"

- name: freebsd | update python package alternatives
  when: os == "freebsd11"
  file:
    dest: "/usr/local/bin/python"
    state: link
    src: "/usr/local/bin/python2"

- name: smartos17 | update gcc symlinks
  when: os == "smartos17"
  file:
    src: "/opt/local/gcc7/bin/{{ gcc }}"
    dest: "/opt/local/bin/{{ gcc }}"
    state: link
  loop_control:
    loop_var: gcc
  with_items:
    - gcc
    - cc
    - g++
    - cpp
    - c++

- name: centos6 | install devtoolset-2
  when: "os == 'centos6'"
  yum:
    disable_gpg_check: true
    name: "devtoolset-2-gcc,devtoolset-2-gcc-c++,devtoolset-2-binutils"
    state: present

- name: remove fortune from login shells
  when: os|stripversion == 'freebsd'
  lineinfile:
    dest: "/home/{{ server_user }}/{{ login_item }}"
    state: absent
    regexp: fortune freebsd
  loop_control:
    loop_var: login_item
  with_items: [ '.login', '.profile' ]

- name: pi | set hostname
  when: "inventory_hostname|regex_search('-arm(v6l|v7l|64)_pi')"
  copy:
    content: |
      {{ safe_hostname }}
    dest: /etc/hostname

- name: pi | set hostname resolver
  when: "inventory_hostname|regex_search('-arm(v6l|v7l|64)_pi')"
  lineinfile:
    dest: /etc/hosts
    state: present
    regexp: '^127\.0\.1\.1\s+\w.+$'
    line: '127.0.1.1        {{safe_hostname}}'

- name: aix | update curl symlinks
  when: os|startswith("aix")
  file:
    src: "/opt/freeware/bin/{{ curl }}"
    dest: "/usr/bin/{{ curl }}"
    state: link
  loop_control:
    loop_var: curl
  with_items:
    - curl
    - curl_32
    - curl_64

- name: run ccache installer
  include: "{{ ccache_include }}"
  loop_control:
    loop_var: ccache_include
  with_first_found:
    - files:
        - "{{ role_path }}/tasks/partials/ccache/{{ os }}-{{ arch }}.yml"
        - "{{ role_path }}/tasks/partials/ccache/{{ os }}.yml"
        - "{{ role_path }}/tasks/partials/ccache/{{ os|stripversion }}.yml"
      skip: true

- name: set up ntp
  include: "{{ ntp_include }}"
  loop_control:
    loop_var: ntp_include
  with_first_found:
    - files:
        - "{{ role_path }}/tasks/partials/ntp/{{ os }}.yml"
        - "{{ role_path }}/tasks/partials/ntp/{{ os|stripversion }}.yml"
        - "{{ role_path }}/tasks/partials/ntp/{{ os|match_key(ntp_service, raise_error=False) }}.yml"
      skip: true

- name: reset default OpenSSL security level
  ansible.builtin.replace:
    path: /etc/ssl/openssl.cnf
    regexp: "SECLEVEL=2"
    replace: "SECLEVEL=1"
  when: "os == 'debian10'"
