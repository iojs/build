---

#
# common tasks suitable for all machines
#

- name: gather facts
  setup:

# setting hostname is not supported for all os:es. see
# https://github.com/ansible/ansible-modules-core/issues/4818
# https://github.com/ansible/ansible-modules-core/issues/4782
# also, some os:es complain about underscores in hostnames
- name: generate hostname
  set_fact:
    safe_hostname: "{{ inventory_hostname | regex_replace('_', '--') }}"

- name: set hostname
  when: not os|startswith("smartos") and not os|startswith("zos")
  hostname: name="{{ safe_hostname }}"

- name: disable joyent smartconnect
  when: os|startswith("smartos")
  notify: restart sshd
  lineinfile: state=absent dest="{{ ssh_config }}" regexp=libsmartsshd.so

- name: change default coredump folder
  when: os|startswith("smartos")
  shell: coreadm -i /home/iojs/cores/core.%f.%p -e process -d global

- name: disable sftp
  when: not os|startswith("win")
  notify: restart sshd
  lineinfile: state=absent dest="{{ ssh_config }}" regexp=^Subsystem(\s+)sftp

- name: add os-specific repos
  include: "{{ repos_include }}"
  loop_control:
    loop_var: repos_include
  with_first_found:
    - files:
        - "{{ role_path }}/tasks/partials/repo/{{ os }}.yml"
        - "{{ role_path }}/tasks/partials/repo/{{ os|stripversion }}.yml"
      skip: true

- name: check for a recent enough ccache
  when: os in ccache_no_binpkg
  stat: path="{{ binary_dest }}"
  register: has_ccache

- name: check for a recent enough git
  when: os in git_no_binpkg
  stat: path="{{ binary_dest }}"
  register: has_git

- name: install packages
  when: not os|startswith("zos")
  package: name="{{ package }}" state=present
  loop_control:
    loop_var: package
  with_items:
    # ansible doesn't like empty lists
    - "{{ packages[os]|default('[]') }}"
    - "{{ packages[os|stripversion]|default('[]') }}"
    - "{{ common_packages|default('[]') }}"

- name: ubuntu1404 | update package alternatives
  when: os == "ubuntu1404"
  alternatives: link=/usr/bin/{{ gcc }} name={{ gcc }} path=/usr/bin/{{ gcc }}-4.9
  loop_control:
    loop_var: gcc
  with_items:
    - gcc
    - g++

- name: smartos17 | update gcc symlinks
  when: os == "smartos17"
  file:
    src: "/opt/local/gcc7/bin/{{ gcc }}"
    dest: "/opt/local/bin/{{ gcc }}"
    state: link
  loop_control:
    loop_var: gcc
  with_items:
    - gcc
    - cc
    - g++
    - cpp
    - c++

- name: remove fortune from login shells
  when: os|stripversion == 'freebsd'
  lineinfile:
    dest: "/home/{{ server_user }}/{{ login_item }}"
    state: absent
    regexp: fortune freebsd
  loop_control:
    loop_var: login_item
  with_items: [ '.login', '.profile' ]

- name: pi | set hostname
  when: "inventory_hostname|regex_search('-arm(v6l|v7l|64)_pi')"
  copy:
    content: |
      {{ safe_hostname }}
    dest: /etc/hostname

- name: pi | set hostname resolver
  when: "inventory_hostname|regex_search('-arm(v6l|v7l|64)_pi')"
  lineinfile:
    dest: /etc/hosts
    state: present
    regexp: '^127\.0\.1\.1\s+\w.+$'
    line: '127.0.1.1        {{safe_hostname}}'

- name: run ccache installer
  when: os in ccache_no_binpkg and not has_ccache.stat.exists
  include: ccache.yml
  static: false

- name: set up ntp
  include: "{{ ntp_include }}"
  loop_control:
    loop_var: ntp_include
  with_first_found:
    - files:
        - "{{ role_path }}/tasks/partials/ntp/{{ os }}.yml"
        - "{{ role_path }}/tasks/partials/ntp/{{ os|stripversion }}.yml"
        - "{{ role_path }}/tasks/partials/ntp/{{ os|match_key(ntp_service, raise_error=False) }}.yml"
      skip: true
