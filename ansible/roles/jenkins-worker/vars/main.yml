---

#
#
#

init: {
  centos:  ['centos5', 'centos6','centos7'],
  debian:  ['debian7', 'ubuntu1204'],
  freebsd: 'freebsd',
  rhel72: 'rhel72',
  systemd: ['centos7', 'debian8', 'debian9', 'fedora', 'ubuntu1604', 'ubuntu1610', 'ubuntu1710'],
  svc:     'smartos',
  upstart: ['ubuntu12', 'ubuntu1404'],
  start:   'zos'
  }

jenkins_init: {
  centos: {
    dest: '/etc/init.d/jenkins',
    src: 'centos.initd.j2',
    mode: '0755'
    },
  debian: {
    dest: '/etc/init.d/jenkins',
    src: 'sysvinit.initd.j2',
    mode: '0755'
    },
  freebsd: {
    dest: '/usr/local/etc/rc.d/jenkins',
    src: 'freebsd.initd.j2',
    mode: '0755'
    },
  openrc: {
    dest: '/etc/init.d/jenkins',
    src: 'openrc.initd.j2',
    mode: '0755'
    },
  rhel72: {
    dest: '/usr/lib/systemd/system/jenkins.service',
    src: 'systemd.service.j2',
    mode: '0644'
    },
  svc: {
    dest: '/home/{{ server_user }}/jenkins_manifest.xml',
    src: 'jenkins_manifest.xml.j2'
    },
  systemd: {
    dest: '/lib/systemd/system/jenkins.service',
    src: 'systemd.service.j2'
    },
  upstart: {
    dest: '/etc/init/jenkins.conf',
    src: 'upstart.j2'
    },
  start: {
    dest: '{{ home }}/{{ server_user }}/start.sh',
    src: 'start.j2'
    },
  }

# if you fail here, it means it cant map your os or os family to a init system
# the best thing to do would be throwing, but the default case seems to be
# called regardless of success.
init_type: "{{ os|match_key(init, raise_error=False)|default(os|stripversion|match_key(init, raise_error=False)) }}"
jenkins: "{{ jenkins_init[init_type] }}"

needs_monit: [
  'centos5',
  'centos6',
  'debian7',
  ]

# some os'es needs different paths to java. add them here.
java_path: {
  'smartos14': '/opt/local/java/openjdk8/bin/java',
  'smartos15': '/opt/local/java/openjdk8/bin/java',
  'smartos16': '/opt/local/java/openjdk8/bin/java',
  'smartos17': '/opt/local/java/openjdk8/bin/java',
  'zos13': '/usr/lpp/java/J8.0_64/bin/java'
  }

# same for bash. will default to /bin/bash if you don't set it
bash_path: {
  freebsd: '/usr/local/bin/bash',
  zos: 'bash'
  }

raspberry_pi: {
  nfs_server: '192.168.1.10',
  nfs_share_root: '/exports/nodejs/pi',
  containers: {
    armv6l: [
      { name: 'wheezy', template: 'rpi_wheezy.Dockerfile.j2' },
      { name: 'jessie', template: 'rpi_jessie.Dockerfile.j2' }
    ],
    armv7l: [
      { name: 'wheezy', template: 'rpi_wheezy.Dockerfile.j2' },
      { name: 'jessie', template: 'rpi_jessie.Dockerfile.j2' },
      { name: 'stretch', template: 'rpi_stretch.Dockerfile.j2' }
    ],
    arm64: [
      { name: 'jessie', template: 'rpi_jessie.Dockerfile.j2' },
      { name: 'stretch', template: 'rpi_stretch.Dockerfile.j2' }
    ]
  }
}

scaleway_armv7: {
  containers: [
      { name: 'wheezy', template: 'armv7_wheezy.Dockerfile.j2' },
      { name: 'jessie', template: 'armv7_jessie.Dockerfile.j2' },
      { name: 'stretch', template: 'armv7_stretch.Dockerfile.j2' }
  ]
}

# primarily for raspberry pi workers, some arm64 workers may need `server_jobs` defined in host_vars
# to override these low numbers
jobs_variants: {
  armv6l: '1',
  armv7l: '2',
  arm64: '3',
  smartos: '2'
}
