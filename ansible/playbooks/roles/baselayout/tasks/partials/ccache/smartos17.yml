---
#
# Downloads and installs ccache
#

- name: "ccache : check for a recent enough ccache"
  stat:
    path: "/usr/local/bin/ccache"
  register: has_ccache

- name: "ccache : fetch samba ccache HTML page"
  # This depends on ansible being able to run curl locally, YMMV, if it doesn't
  # work, try changing the local_action to a remote one:
  #  raw: curl -sL https://www.samba.org/ftp/ccache/
  local_action: shell curl -sL https://www.samba.org/ftp/ccache/ | sed -n -e 's/.*"ccache-\([0-9.]*\).tar.gz".*/\1/p' | tail -1
  register: ccache_html_content
  when: not has_ccache.stat.exists

- name: "ccache : extract ccache latest version"
  set_fact:
    ccache_latest: "{{ ccache_html_content.stdout }}"
  when: not has_ccache.stat.exists

- name: "ccache : download and extract"
  unarchive:
    dest: /tmp/
    remote_src: yes
    src: "https://www.samba.org/ftp/ccache/ccache-{{ ccache_latest }}.tar.gz"
  register: new_archive
  when: not has_ccache.stat.exists

- name: "ccache : prepare for compilation - smartos"
  shell: bash ./configure CPPFLAGS=-std=c99
  args:
    chdir: "/tmp/ccache-{{ ccache_latest }}"
  when: not has_ccache.stat.exists

- name: "ccache : compile"
  make:
    chdir: "/tmp/ccache-{{ ccache_latest }}"
  when: not has_ccache.stat.exists

- name: "ccache : install"
  copy:
    dest: "/usr/local/bin"
    mode: 0755
    remote_src: yes
    src: "/tmp/ccache-{{ ccache_latest }}/ccache"
  when: not has_ccache.stat.exists

- name: "ccache : create symlinks"
  loop_control:
    loop_var: destination
  with_items: [ 'gcc', 'cc', 'g++', 'c++' ]
  file:
    dest: "/usr/local/bin/{{ destination }}"
    src: /usr/local/bin/ccache
    state: link
  when: not has_ccache.stat.exists

- name: "ccache : cleanup"
  file:
    path: "/tmp/ccache-{{ ccache_latest }}"
    state: absent
  when: not has_ccache.stat.exists
