---

#
# set up a jenkins worker -- muy bueno!
#

- hosts:
  - test
  - release
  # Benchmarking machine
  - infra-softlayer-ubuntu1404-x64-2
  - "!*-win*"

  roles:
    - bootstrap
    - package-upgrade
    - baselayout
    - { role: 'benchmarking',
        when: is_benchmark is defined and is_benchmark|bool == True }
    - jenkins-worker

  pre_tasks:
# Requires `secret: XXX` to be in the ansible/host_vars/HOST
# file, where XXX is the jenkins secret used to connect to the master,
# and HOST is the full ansible host name.
    - name: check if secret is properly set
      fail:
      failed_when: not secret

  environment: '{{remote_env}}'

- hosts:
  - "*-win*"

  roles:
    - bootstrap
    - package-upgrade
    - baselayout-windows
    - visual-studio
    - jenkins-worker-windows

  pre_tasks:
    - name: check if secret is properly set
      fail:
      failed_when: not secret

  post_tasks:
    - name: reboot Windows machines
      when: os|startswith("win")
      win_reboot:

  environment: '{{remote_env}}'

#
# Set up Jenkins Workspace servers
#

- hosts:
    - test-packetnet-ubuntu1804-x64-1
    - test-packetnet-ubuntu1804-x64-2
    - test-ibm-ubuntu1804-x64-1

  roles:
    - jenkins-workspace

#
# Install Linux perf on Ubuntu 16.04 servers
#

- hosts:
    - test-*-ubuntu1604-x*
  roles:
    - linux-perf

#
# Ensure node is not installed anywhere but the linter servers
#

- hosts:
  - test
  - release
  - "!test-packetnet-ubuntu1804-x64-1"
  - "!test-packetnet-ubuntu1804-x64-2"
  - "!test-ibm-ubuntu1804-x64-1"
  tasks:
    - name: remove node and npm packages
      when: not os|startswith("win") and not os|startswith("zos") and not os|startswith("ibmi") and os != "macos11.0"
      package:
        name: "{{ package }}"
        state: absent
      loop_control:
        loop_var: package
      with_items: [ "node", "nodejs", "npm" ]
    - name: fail if node is in the path - please uninstall it
      when: not os|startswith("win")
      shell: "node -v"
      register: node_check_cmd
      failed_when: node_check_cmd.rc == 0
      changed_when: False
    - name: fail if node is in the path - please uninstall it
      when: os|startswith("win")
      win_shell: "node -v"
      register: node_check_cmd_win
      failed_when: node_check_cmd_win.rc == 0
      changed_when: False
