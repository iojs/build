---
- hosts: iojs-raspbian
  become: true

  tasks:

    - include_vars: ansible-vars.yaml
      tags: vars

    - name: Init | Discover Pi type
      set_fact:
        pi_type: "{{ inventory_hostname | regex_replace('^.+_(pi[^-]+)-\\d+$', '\\1') }}"
      tags: vars

    - name: Init | Discover worker type
      set_fact:
        worker_type: "{{ inventory_hostname | regex_replace('^(test|release)-.+$', '\\1') }}"
      tags: vars

    - name: Init | Generate hostname
      set_fact:
        safe_hostname: "{{ inventory_hostname | regex_replace('_', '--') }}"
      tags: vars

    - name: General | APT update
      apt:
        update_cache: yes
      tags: general

    - name: General | APT upgrade
      apt:
        upgrade: dist
      tags: general

    # do this early to speed up login for subsequent actions
    - name: SSH | Remove DNS lookup for login
      lineinfile:
        dest: /etc/ssh/sshd_config
        line: "{{ item }}"
      with_items:
        - "VerifyReverseMapping no"
        - "UseDNS no"
      register: ssh_remove_dns
      tags: general

    - name: SSH | Restart ssh service
      service: name=ssh state=restarted enabled=yes
      when: ssh_remove_dns.changed
      tags: general

    - name: General | Setup keyboard config
      template:
        src: "./resources/keyboard-defaults.j2"
        dest: "/etc/default/keyboard"
        owner: "root"
        group: "root"
        mode: 0644
      register: keyboard_config
      tags: general

    - name: General | Configure keyboard
      shell: dpkg-reconfigure -f noninteractive keyboard-configuration && invoke-rc.d keyboard-setup start
      when: keyboard_config.changed
      tags: general

    - name: General | Setup locale
      shell:
        cmd: |
          cat << EOF | debconf-set-selections
          locales   locales/locales_to_be_generated multiselect     en_US.UTF-8 UTF-8
          EOF
          rm /etc/locale.gen
          dpkg-reconfigure -f noninteractive locales
          update-locale LANG="en_US.UTF-8"
          cat << EOF | debconf-set-selections
          locales   locales/default_environment_locale select       en_US.UTF-8
          EOF
      tags: general

    - name: General | Set hostname
      copy:
        content: |
          {{ safe_hostname }}
        dest: /etc/hostname
      tags: general

    - name: General | Set hostname resolver
      lineinfile:
        dest: /etc/hosts
        state: present
        regexp: '^127\.0\.1\.1\s+\w.+$'
        line: '127.0.1.1        {{safe_hostname}}'
      tags: general

    - name: General | Configure 1024M dphys-swapfile
      lineinfile:
        dest: /etc/dphys-swapfile
        state: present
        regexp: '^(\s*)CONF_SWAPSIZE=1024(\s*)$'
        line: 'CONF_SWAPSIZE=1024'
      register: dphys_swapfile
      tags: general

    - name: General | Set up 1024M dphys-swapfile
      shell: dphys-swapfile swapoff && dphys-swapfile setup && dphys-swapfile swapon
      become_user: root
      when: dphys_swapfile.changed
      tags: general

    - name: General | Configure overclocking speed
      template:
        src: "./resources/boot-config.{{pi_type}}.txt.j2"
        dest: "/boot/config.txt"
        owner: "root"
        group: "root"
        mode: 0755
      when: pi_type in ("pi1p", "pi2")
      tags: general

    - name: General | Setup APT proxy
      template:
        src: "./resources/02proxy.j2"
        dest: "/etc/apt/apt.conf.d/02proxy"
        owner: "root"
        group: "root"
        mode: 0644
      when: pi_local is undefined
      tags: general

    - name: General | Configure APT sources
      template:
        src: "./resources/sources.list.j2"
        dest: "/etc/apt/sources.list"
        owner: "root"
        group: "root"
        mode: 0644
      when: pi_local is undefined
      tags: general

    - name: General | Install required packages
      apt:
        name: "{{ item }}"
        update_cache: yes
        state: latest
      with_items: "{{ packages }}"
      tags: general

    - name: gcc | Install gcc 4.8
      when: ansible_distribution_release == 'wheezy'
      apt:
        name: "{{ item }}"
        update_cache: yes
        state: latest
      with_items:
        - gcc-4.8
        - g++-4.8
      tags: gcc

    - name: gcc | Install gcc 4.9
      when: ansible_distribution_release == 'jessie'
      apt:
        name: "{{ item }}"
        update_cache: yes
        state: latest
      with_items:
        - gcc-4.9
        - g++-4.9
      tags: gcc

    - name: gcc | update-alternatives for gcc 4.8
      when: ansible_distribution_release == 'wheezy'
      alternatives:
        name: "{{ item.link }}"
        link: "/usr/bin/{{ item.link }}"
        path: "/usr/bin/{{ item.path }}"
      with_items:
        - { link: 'gcc', path: 'gcc-4.8' }
        - { link: 'cc',  path: 'gcc-4.8' }
        - { link: 'g++', path: 'g++-4.8' }
        - { link: 'c++', path: 'g++-4.8' }
        - { link: 'cpp', path: 'g++-4.8' }
      tags: gcc

    - name: gcc | update-alternatives for gcc 4.9
      when: ansible_distribution_release == 'jessie'
      alternatives:
        name: "{{ item.link }}"
        link: "/usr/bin/{{ item.link }}"
        path: "/usr/bin/{{ item.path }}"
      with_items:
        - { link: 'gcc', path: 'gcc-4.9' }
        - { link: 'cc',  path: 'gcc-4.9' }
        - { link: 'g++', path: 'g++-4.9' }
        - { link: 'c++', path: 'g++-4.9' }
        - { link: 'cpp', path: 'g++-4.9' }
      tags: gcc

    - name: User | Add {{ server_user }} user
      user:
        name: "{{ server_user }}"
        shell: /bin/bash
      tags: user

    - name: NFS | Enable rpcbind service
      service: name=rpcbind state=started enabled=yes
      tags: init

    - name: NFS | Make NFS mounted directories
      file:
        path: "/home/{{ server_user }}/{{ item }}"
        state: directory
        mode: 0755
        owner: "{{ server_user }}"
      with_items:
        - ".ccache"
        - "build"
        - "io.js.reference"
      ignore_errors: True
      tags: nfs

    - name: NFS | Configure mount options
      mount:
        name: "/home/{{ server_user }}/{{ item.dst }}"
        src: "{{ nfs_server }}:{{ nfs_share_root }}/{{ item.src }}"
        fstype: nfs4
        opts: rw,exec,async,noauto
        state: mounted
      with_items:
        - { src: '.ccache', dst: '.ccache' }
        - { src: 'io.js.reference', dst: 'io.js.reference' }
        - { src: '{{ server_id }}', dst: 'build' }
      tags: nfs

    - name: NFS | Mount at end of boot sequence
      lineinfile:
        path: /etc/rc.local
        insertbefore: '^exit 0'
        line: '{{ item }}'
      with_items:
        - '/etc/init.d/rpcbind start'
        - '/etc/init.d/nfs-common start'
        - 'sleep 10 && (grep nfs /etc/fstab | cut -d" " -f 2 | xargs -l mount) &'
      tags: nfs

    - name: Jenkins | Copy start.sh script
      template:
        src: "./resources/start.j2"
        dest: "/home/{{ server_user }}/start.sh"
        owner: "{{ server_user }}"
        group: "{{ server_user }}"
        mode: 0755
      tags: jenkins

    - name: Tunnel | Copy start_tunnel.sh script
      template:
        src: "./resources/start_tunnel.j2"
        dest: "/usr/local/sbin/start_tunnel.sh"
        owner: "{{ server_user }}"
        group: "{{ server_user }}"
        mode: 0755
      when: pi_local is defined
      tags: tunnel

    - name: Tunnel | crontab entry
      cron:
        name: 'start ssh tunnel on reboot'
        special_time: reboot
        job: "/usr/local/sbin/start_tunnel.sh"
      when: pi_local is defined
      tags: tunnel

    - name: ccache | Install ccache
      import_tasks: ../ansible-tasks/ccache.yaml
      vars:
        version: 3.3.4
      tags: ccache

    - name: git | Install git
      import_tasks: ../ansible-tasks/git.yaml
      vars:
        version: 2.15.0
      tags: git

    - name: monit | Install monit
      import_tasks: ../ansible-tasks/monit.yaml
      vars:
        monit_conf_file: ../ansible-tasks/resources/monit-jenkins.conf.j2
      tags: monit
