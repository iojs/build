---

- hosts: iojs-build-centos5
  # This first set of tasks is to simply get python-simplejson onto
  # the EL5 machine because it's needed by Ansible when using
  # older versions of Python on the managed node

  gather_facts: False

  remote_user: root

  tasks:

    - include_vars: ansible-vars.yaml
      tags: vars

    - name: General | Bootstrap Python for Ansible
      raw: yum -y install python-simplejson
      tags: general


- hosts: iojs-build-centos5

  gather_facts: True

  remote_user: root

  tasks:

    - include_vars: ansible-vars.yaml
      tags: vars

    - name: General | Download EPEL RPM
      command: curl -sL http://dl.fedoraproject.org/pub/epel/5/{{ server_arch }}/epel-release-5-4.noarch.rpm -o /tmp/epel-release-5-4.noarch.rpm
      tags: general

    - name: General | Install EPEL RPM
      command: bash -c 'rpm -Uvh /tmp/epel-release-5-4.noarch.rpm || true'
      tags: general

    - name: General | yum Update
      yum: name=* state=latest
      tags: general

    - name: General | Install python-hashlib
      yum: name=python-hashlib state=latest
      tags: general

    - name: General | Add SLC devtoolset repo
      command: curl -sL http://linuxsoft.cern.ch/cern/devtoolset/slc5-devtoolset.repo -o /etc/yum.repos.d/slc5-devtoolset.repo
      tags: general

    - name: General | Add SLC devtoolset repo GPG key
      command: rpm --import http://ftp.scientificlinux.org/linux/scientific/5x/{{ server_arch }}/RPM-GPG-KEYs/RPM-GPG-KEY-cern
      tags: general

    - name: General | Install required packages
      yum: name={{ item }} state=latest
      with_items: packages
      tags: general

    - name: NTP | Run initial NTP
      command: ntpdate -u pool.ntp.org
      tags: ntp

    - name: NTP | Enable NTP
      command: chkconfig ntpd on
      tags: ntp

    - name: NTP | Start NTP
      service: name=ntpd state=started enabled=yes
      tags: ntp

    - name: General | Increase file descriptor limits
      lineinfile: dest=/etc/security/limits.conf line="{{ item }}"
      with_items:
        - "*         hard    nofile      500000"
        - "*         soft    nofile      500000"
        - "root      hard    nofile      500000"
        - "root      soft    nofile      500000"
      tags: general

    - name: User | Add {{ server_user }} user
      user: name="{{ server_user }}" shell=/bin/bash
      tags: user

    - name: User | Download pubkey(s)
      get_url: url=https://github.com/{{ item }}.keys dest=/tmp/{{ item }}.keys
      delegate_to: 127.0.0.1
      with_items: ssh_users
      tags: user

    - name: General | Create authorized_keys for root
      authorized_key: user="root" key="{{ lookup('file', '/tmp/' + item + '.keys') }}"
      with_items: ssh_users
      tags: user

    - name: General | Create authorized_keys for {{ server_user }}
      authorized_key: user="{{ server_user }}" key="{{ lookup('file', '/tmp/' + item + '.keys') }}"
      with_items: ssh_users
      tags: user

    - name: Jenkins | Download Jenkins' slave.jar
      command: curl -sL https://jenkins-iojs.nodesource.com/jnlpJars/slave.jar -o /home/{{ server_user }}/slave.jar
      tags: jenkins

    - name: Jenkins | Copy init script
      copy: src=./resources/jenkins.initd dest=/etc/init.d/jenkins owner={{ server_user }} group={{ server_user }} mode=0755
      tags: jenkins

    - name: Jenkins | Symlink gcc41 init script
      file: src=/etc/init.d/jenkins dest=/etc/init.d/jenkins-gcc41 state=link
      tags: jenkins

    - name: Jenkins | Copy environment files
      copy: src=./resources/jenkins.sysconfig dest=/etc/sysconfig/{{ item }} owner={{ server_user }} group={{ server_user }} mode=0400
      with_items:
        - jenkins
        - jenkins-gcc41
      tags: jenkins

    - name: Jenkins | Copy secret to environment
      replace: dest=/etc/sysconfig/jenkins regexp="\{\{secret\}\}" replace="{{ server_secret }}"
      tags: jenkins

    - name: Jenkins | Copy secret to gcc41 environment
      replace: dest=/etc/sysconfig/jenkins-gcc41 regexp="\{\{secret\}\}" replace="{{ gcc41_server_secret }}"
      tags: jenkins

    - name: Jenkins | Copy server id to environment
      replace: dest=/etc/sysconfig/jenkins regexp="\{\{id\}\}" replace="{{ server_id }}"
      tags: jenkins
      
    - name: Jenkins | Copy server id to gcc41 environment
      replace: dest=/etc/sysconfig/jenkins-gcc41 regexp="\{\{id\}\}" replace="{{ gcc41_server_id }}"
      tags: jenkins
      
    - name: Jenkins | Add scl path to environment
      replace: dest=/etc/sysconfig/jenkins regexp="\{\{scl\}\}" replace="/opt/rh/devtoolset-2/root/usr/bin"
      tags: jenkins

    - name: Jenkins | Add scl path to gcc41 environment
      replace: dest=/etc/sysconfig/jenkins-gcc41 regexp="\{\{scl\}\}" replace=""
      tags: jenkins

    - name: Jenkins | Add init scripts to startup
      action: shell chkconfig --add {{ item }}
      with_items:
        - jenkins
        - jenkins-gcc41
      tags: jenkins

    - name: Jenkins | Add init scripts to runlevels
      action: shell chkconfig --level 345 {{ item }} on
      with_items:
        - jenkins
        - jenkins-gcc41
      tags: jenkins

    - name: Jenkins | Create {{ server_user }} bin directory
      file: path=/home/{{ server_user }}/bin owner={{ server_user }} mode=0755 state=directory
      tags: jenkins

    - name: Jenkins | Create python26 symlink
      file: src=/usr/bin/python26 dest=/home/{{ server_user }}/bin/python owner={{ server_user }} state=link
      tags: jenkins
      
    - name: Jenkins | Create ccache symlinks
      file: src=/usr/bin/ccache dest=/home/{{ server_user }}/bin/{{ item }} owner={{ server_user }} state=link
      with_items:
        - gcc
        - g++
        - cc
      tags: jenkins
