----
- hosts: iojs-freebsd10

  remote_user: freebsd
  sudo: yes

  vars:
    - ansible_python_interpreter: "/usr/bin/env python"

  tasks:

    - include_vars: ansible-vars.yaml
      tags: vars

    - name: General | Update package repository
      command: pkg update
      tags: general

    - name: General | Install required packages
      command: pkg install -U -y {{ item }}
      with_items: packages
      tags: general

    - name: User | Add {{ server_user }} group
      group: name="{{ server_user }}" state=present
      tags: user

    - name: User | Add {{ server_user }} user
      user: name="{{ server_user }}" shell=/bin/sh append=yes groups={{ server_user }}
      tags: user

    - name: User | Download pubkey(s)
      get_url: url=https://github.com/{{ item }}.keys dest=/tmp/{{ item }}.keys
      delegate_to: 127.0.0.1
      with_items: ssh_users
      tags: user

    - name: General | Create authorized_keys for root
      authorized_key: user="root" key="{{ lookup('file', '/tmp/' + item + '.keys') }}"
      with_items: ssh_users
      tags: user

    - name: General | Create authorized_keys for {{ server_user }}
      authorized_key: user="{{ server_user }}" key="{{ lookup('file', '/tmp/' + item + '.keys') }}"
      with_items: ssh_users
      tags: user

    - name: Jenkins | Download Jenkins' slave.jar
      command: curl -sL https://ci.nodejs.org/jnlpJars/slave.jar -o /home/{{ server_user }}/slave.jar
      tags: jenkins

    - name: Assures that {{ init_base }}/{rc.d, rc.conf.d} directories exists
      file: path={{ init_base }}/{{ item }} state=directory
      with_items:
        - rc.d
        - rc.conf.d
      tags: init

    - name: Init | Copy init script
      copy: src=./resources/jenkins dest={{ init_base }}/rc.d/jenkins owner={{ server_user }} group={{ server_user }} mode=0755
      tags: init

    - name: Init | Copy config template
      copy: src=./resources/jenkins.conf dest={{ init_base }}/rc.conf.d/jenkins owner={{ server_user }} group={{ server_user }} mode=0600
      tags: init

    - name: Init | Copy secret to config`
      replace: dest={{ init_base }}/rc.conf.d/jenkins regexp="\{\{secret\}\}" replace="{{ server_secret }}"
      tags: init

    - name: Init | Copy user/group to config`
      replace: dest={{ init_base }}/rc.conf.d/jenkins regexp="\{\{{{item}}\}\}" replace="{{ server_user }}"
      with_items:
        - user
        - group
      tags: init

    - name: Init | Copy id to config
      replace: dest={{ init_base }}/rc.conf.d/jenkins regexp="\{\{id\}\}" replace="{{ inventory_hostname }}"
      tags: init

    - name: Init | Add to boot and start service
      service: name=jenkins state=started enabled=yes
      tags: init
