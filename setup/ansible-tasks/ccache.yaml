---
# Downloads and installs ccache
# @requires: version=3.2.4

- name: CCache | Check ccache --version
  shell: ccache --version
  ignore_errors: True
  register: ccache_version

- name: CCache | Download ccache-{{ version }}
  get_url: url=https://www.samba.org/ftp/ccache/ccache-{{ version }}.tar.gz dest=/tmp/
  register: new_archive
  when: ccache_version.stdout.find('{{ version }}') == -1

- name: CCache | Extract ccache-{{ version }}
  unarchive: src=/tmp/ccache-{{ version }}.tar.gz dest=/tmp/ copy=no
  when: ccache_version.stdout.find('{{ version }}') == -1 and new_archive|changed

- name: CCache | Prepare for compilation by running configure
  shell: ./configure chdir=/tmp/ccache-{{ version }} >> /dev/null
  when: ccache_version.stdout.find('{{ version }}') == -1

- name: CCache | Compile ccache
  shell: make chdir=/tmp/ccache-{{ version }} >> /dev/null
  when: ccache_version.stdout.find('{{ version }}') == -1

- name: CCache | Install generated binary
  command: install -c -m 755 ccache /usr/local/bin
  args:
    chdir: /tmp/ccache-{{ version }}
  when: ccache_version.stdout.find('{{ version }}') == -1

- name: CCache | Create symlinks in /usr/local/bin/
  file: src=/usr/local/bin/ccache dest=/usr/local/bin/{{ item }} state=link
  with_items:
    - gcc
    - cc
    - g++
    - c++
  when: ccache_version.stdout.find('{{ version }}') == -1

- name: CCache | Cleanup
  file: path="{{ item }}" state=absent
  with_items:
    - /tmp/ccache-{{ version }}.tar.gz
    - /tmp/ccache-{{ version }}
  when: ccache_version.stdout.find('{{ version }}') == -1
