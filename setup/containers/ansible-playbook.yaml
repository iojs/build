---
- hosts: iojs-build-containers

  remote_user: root

  tasks:

    - include_vars: ansible-vars.yaml
      tags: vars

    - name: General | APT Update
      apt: update_cache=yes
      tags: general

    - name: General | APT Upgrade
      apt: upgrade=full
      tags: general

    # Not strictly required at the moment, intended to be used with a
    # Docker webhook updater, _maybe_
    - name: Node.js | Add the NodeSource Node.js repo
      command: sh -c 'curl -sL https://deb.nodesource.com/setup | bash -'
      tags: node

    - name: General | Install required packages
      apt: name={{ item }} update_cache=yes state=latest
      with_items: packages
      tags: general

    - name: General | Increase file descriptor limits
      lineinfile: dest=/etc/security/limits.conf line="{{ item }}"
      with_items:
        - "*         hard    nofile      500000"
        - "*         soft    nofile      500000"
        - "root      hard    nofile      500000"
        - "root      soft    nofile      500000"
      tags: general

    - name: User | Add {{ server_user }} user
      user: name="{{ server_user }}" shell=/bin/bash
      tags: user

    - name: Docker | Set up docker.io
      command: sh -c 'curl -sL http://get.docker.io/ | bash -'
      tags: docker

    - name: Docker | Add {{ server_user }} to docker group
      command: usermod -aG docker {{ server_user }}
      tags: docker

    - name: Docker | Pull all iojs/build images
      command: docker pull -a iojs/build
      tags: docker

    - name: Jenkins | Download Jenkins' slave.jar
      command: curl -sL https://ci.nodejs.org/jnlpJars/slave.jar -o /home/{{ server_user }}/slave.jar
      tags: jenkins

    - name: Jenkins | Copy start.sh script
      copy: src=./resources/start.sh dest=/home/{{ server_user }}/start.sh owner={{ server_user }} group={{ server_user }} mode=0755
      tags: jenkins

    - name: Jenkins | Copy secrets to start.sh script
      replace: dest=/home/{{ server_user }}/start.sh regexp="\{\{iojs-{{ item.key }}-secret\}\}" replace="{{ item.value.secret }}"
      with_dict: distributions
      tags: jenkins

    - name: Jenkins | Copy server ids to start.sh script
      replace: dest=/home/{{ server_user }}/start.sh regexp="\{\{id\}\}" replace="{{ server_id }}"
      tags: jenkins
